package calibobj;
// Generated 17-Jun-2016 10:09:16 by Hibernate Tools 4.3.1.Final

import model.CosObject;
import util.FitsUtil;

/**
 * CalibObjStar generated by hbm2java
 */
public class CalibObjStar extends CalibObj implements CosObject {


    private float rowvdeg;
    private float rowvdegerr;
    private float colvdeg;
    private float colvdegerr;

    private float[] MRrCc;
    private float[] MRrCcPsf;

    private float[] skyflux;
    private float[] psfflux;
    private float[] psffluxIvar;
    private float[] fiberflux;
    private float[] fiberfluxIvar;
    private float[] fiber2flux;
    private float[] fiber2fluxIvar;
    private float[] modelflux;
    private float[] modelfluxIvar;

    private int pmMatch;
    private float pmra;
    private float pmdec;
    private float pmraerr;
    private float pmdecerr;
    private float pmSigra;
    private float pmSigdec;
    private int pmNfit;
    private float pmDist22;
    private float tmassJ;
    private float tmassJIvar;
    private float tmassH;
    private float tmassHIvar;
    private float tmassK;
    private float tmassKIvar;
    private String tmassPhQual;
    private short tmassRdFlg;
    private short tmassBlFlg;
    private String tmassCcFlg;
    private int tmassGalContam;
    private int tmassMpFlg;
    private Character tmassHemis;
    private double tmassJdate;
    private float[] aperflux6;
    private short zhedflag;
    private float[] cmodelfluxClean;
    private float[] cmodelfluxCleanIvar;
    private float[] cmodelfluxCleanVar;
    private float[] cmodelfluxCleanChi2;
    private short[] cmodelCleanNuse;
    private int[] cmodelCleanMjdMaxdiff;
    private float[] cmodelCleanMjdVar;
    private float[] modelfluxClean;
    private float[] modelfluxCleanIvar;
    private float[] modelfluxCleanVar;
    private float[] modelfluxCleanChi2;

    public CalibObjStar() {
    }
    public CalibObjStar(short run, String rerun, short camcol, short field, short id, int objcType, int objcFlags, int objcFlags2, float objcRowc,
                        float rowvdeg, float rowvdegerr, float colvdeg, float colvdegerr, float[] rowc, float[] colc, float[] MRrCc,
                        float[] MRrCcPsf, int[] flags, int[] flags2, int[] pspStatus, double ra, double dec, float[] psfFwhm,
                        float[] extinction, float[] skyflux, float[] psfflux, float[] psffluxIvar, float[] fiberflux,
                        float[] fiberfluxIvar, float[] fiber2flux, float[] fiber2fluxIvar, float[] modelflux, float[] modelfluxIvar,
                        int[] calibStatus, float[] nmgypercount, int resolveStatus, int thingId, int ifield,
                        int balkanId, int ndetect, int pmMatch, float pmra, float pmdec, float pmraerr, float pmdecerr,
                        float pmSigra, float pmSigdec, int pmNfit, float pmDist22, float tmassJ, float tmassJIvar, float tmassH,
                        float tmassHIvar, float tmassK, float tmassKIvar, String tmassPhQual, short tmassRdFlg, short tmassBlFlg,
                        String tmassCcFlg, int tmassGalContam, int tmassMpFlg, Character tmassHemis, double tmassJdate,
                        float[] aperflux6, short zhedflag, float[] cmodelfluxClean, float[] cmodelfluxCleanIvar,
                        float[] cmodelfluxCleanVar, float[] cmodelfluxCleanChi2, short[] cmodelCleanNuse,
                        int[] cmodelCleanMjdMaxdiff, float[] cmodelCleanMjdVar, float[] modelfluxClean,
                        float[] modelfluxCleanIvar, float[] modelfluxCleanVar, float[] modelfluxCleanChi2) {
        super();
        this.run = run;     // RUN $1 Short I
        this.rerun = rerun;   // RERUN $2 String 3A
        this.camcol = camcol;    // CAMCOL $3 Short B true
        this.field = field;    // FIELD $4 Short I
        this.id = id;    // ID $5 Short I row index
        this.objcType = objcType;
        this.objcFlags = objcFlags;
        this.objcFlags2 = objcFlags2;
        this.objcRowc = objcRowc;
        this.rowvdeg = rowvdeg;
        this.rowvdegerr = rowvdegerr;
        this.colvdeg = colvdeg;
        this.colvdegerr = colvdegerr;
        this.rowc = rowc;
        this.colc = colc;
        this.MRrCc = MRrCc;
        this.MRrCcPsf = MRrCcPsf;
        this.flags1 = flags;
        this.flags2 = flags2;
        this.pspStatus = pspStatus;
        this.ra = ra;
        this.dec = dec;
        this.psfFwhm = psfFwhm;
        this.extinction = extinction;
        this.skyflux = skyflux;
        this.psfflux = psfflux;
        this.psffluxIvar = psffluxIvar;
        this.fiberflux = fiberflux;
        this.fiberfluxIvar = fiberfluxIvar;
        this.fiber2flux = fiber2flux;
        this.fiber2fluxIvar = fiber2fluxIvar;
        this.modelflux = modelflux;
        this.modelfluxIvar = modelfluxIvar;
        this.calibStatus = calibStatus;
        this.nmgypercount = nmgypercount;
        this.resolveStatus = resolveStatus;
        this.thingId = thingId;
        this.ifield = ifield;
        this.balkanId = balkanId;
        this.ndetect = ndetect;
        this.pmMatch = pmMatch;
        this.pmra = pmra;
        this.pmdec = pmdec;
        this.pmraerr = pmraerr;
        this.pmdecerr = pmdecerr;
        this.pmSigra = pmSigra;
        this.pmSigdec = pmSigdec;
        this.pmNfit = pmNfit;
        this.pmDist22 = pmDist22;
        this.tmassJ = tmassJ;
        this.tmassJIvar = tmassJIvar;
        this.tmassH = tmassH;
        this.tmassHIvar = tmassHIvar;
        this.tmassK = tmassK;
        this.tmassKIvar = tmassKIvar;
        this.tmassPhQual = tmassPhQual;
        this.tmassRdFlg = tmassRdFlg;
        this.tmassBlFlg = tmassBlFlg;
        this.tmassCcFlg = tmassCcFlg;
        this.tmassGalContam = tmassGalContam;
        this.tmassMpFlg = tmassMpFlg;
        this.tmassHemis = tmassHemis;
        this.tmassJdate = tmassJdate;
        this.aperflux6 = aperflux6;
        this.zhedflag = zhedflag;
        this.cmodelfluxClean = cmodelfluxClean;
        this.cmodelfluxCleanIvar = cmodelfluxCleanIvar;
        this.cmodelfluxCleanVar = cmodelfluxCleanVar;
        this.cmodelfluxCleanChi2 = cmodelfluxCleanChi2;
        this.cmodelCleanNuse = cmodelCleanNuse;
        this.cmodelCleanMjdMaxdiff = cmodelCleanMjdMaxdiff;
        this.cmodelCleanMjdVar = cmodelCleanMjdVar;
        this.modelfluxClean = modelfluxClean;
        this.modelfluxCleanIvar = modelfluxCleanIvar;
        this.modelfluxCleanVar = modelfluxCleanVar;
        this.modelfluxCleanChi2 = modelfluxCleanChi2;
    }

    public CalibObjStar(Object[] row) {
        super();
        setRows(row);

    }

    @Override
    public String getObjid() {
        //TODO: convert to proper format
        return "" + run + rerun + camcol + field + objcType + id;
    }

    public float getRowvdeg() {
        return this.rowvdeg;
    }

    public void setRowvdeg(float rowvdeg) {
        this.rowvdeg = rowvdeg;
    }

    public float getRowvdegerr() {
        return this.rowvdegerr;
    }

    public void setRowvdegerr(float rowvdegerr) {
        this.rowvdegerr = rowvdegerr;
    }

    public float getColvdeg() {
        return this.colvdeg;
    }

    public void setColvdeg(float colvdeg) {
        this.colvdeg = colvdeg;
    }

    public float getColvdegerr() {
        return this.colvdegerr;
    }

    public void setColvdegerr(float colvdegerr) {
        this.colvdegerr = colvdegerr;
    }

    public float[] getMRrCc() {
        return this.MRrCc;
    }

    public void setMRrCc(float[] MRrCc) {
        this.MRrCc = MRrCc;
    }

    public float[] getMRrCcPsf() {
        return this.MRrCcPsf;
    }

    public void setMRrCcPsf(float[] MRrCcPsf) {
        this.MRrCcPsf = MRrCcPsf;
    }


    public float[] getSkyflux() {
        return this.skyflux;
    }

    public void setSkyflux(float[] skyflux) {
        this.skyflux = skyflux;
    }

    public float[] getPsfflux() {
        return this.psfflux;
    }

    public void setPsfflux(float[] psfflux) {
        this.psfflux = psfflux;
    }

    public float[] getPsffluxIvar() {
        return this.psffluxIvar;
    }

    public void setPsffluxIvar(float[] psffluxIvar) {
        this.psffluxIvar = psffluxIvar;
    }

    public float[] getFiberflux() {
        return this.fiberflux;
    }

    public void setFiberflux(float[] fiberflux) {
        this.fiberflux = fiberflux;
    }

    public float[] getFiberfluxIvar() {
        return this.fiberfluxIvar;
    }

    public void setFiberfluxIvar(float[] fiberfluxIvar) {
        this.fiberfluxIvar = fiberfluxIvar;
    }

    public float[] getFiber2flux() {
        return this.fiber2flux;
    }

    public void setFiber2flux(float[] fiber2flux) {
        this.fiber2flux = fiber2flux;
    }

    public float[] getFiber2fluxIvar() {
        return this.fiber2fluxIvar;
    }

    public void setFiber2fluxIvar(float[] fiber2fluxIvar) {
        this.fiber2fluxIvar = fiber2fluxIvar;
    }

    public float[] getModelflux() {
        return this.modelflux;
    }

    public void setModelflux(float[] modelflux) {
        this.modelflux = modelflux;
    }

    public float[] getModelfluxIvar() {
        return this.modelfluxIvar;
    }

    public void setModelfluxIvar(float[] modelfluxIvar) {
        this.modelfluxIvar = modelfluxIvar;
    }


    public int getPmMatch() {
        return this.pmMatch;
    }

    public void setPmMatch(int pmMatch) {
        this.pmMatch = pmMatch;
    }

    public float getPmra() {
        return this.pmra;
    }

    public void setPmra(float pmra) {
        this.pmra = pmra;
    }

    public float getPmdec() {
        return this.pmdec;
    }

    public void setPmdec(float pmdec) {
        this.pmdec = pmdec;
    }

    public float getPmraerr() {
        return this.pmraerr;
    }

    public void setPmraerr(float pmraerr) {
        this.pmraerr = pmraerr;
    }

    public float getPmdecerr() {
        return this.pmdecerr;
    }

    public void setPmdecerr(float pmdecerr) {
        this.pmdecerr = pmdecerr;
    }

    public float getPmSigra() {
        return this.pmSigra;
    }

    public void setPmSigra(float pmSigra) {
        this.pmSigra = pmSigra;
    }

    public float getPmSigdec() {
        return this.pmSigdec;
    }

    public void setPmSigdec(float pmSigdec) {
        this.pmSigdec = pmSigdec;
    }

    public int getPmNfit() {
        return this.pmNfit;
    }

    public void setPmNfit(int pmNfit) {
        this.pmNfit = pmNfit;
    }

    public float getPmDist22() {
        return this.pmDist22;
    }

    public void setPmDist22(float pmDist22) {
        this.pmDist22 = pmDist22;
    }

    public float getTmassJ() {
        return this.tmassJ;
    }

    public void setTmassJ(float tmassJ) {
        this.tmassJ = tmassJ;
    }

    public float getTmassJIvar() {
        return this.tmassJIvar;
    }

    public void setTmassJIvar(float tmassJIvar) {
        this.tmassJIvar = tmassJIvar;
    }

    public float getTmassH() {
        return this.tmassH;
    }

    public void setTmassH(float tmassH) {
        this.tmassH = tmassH;
    }

    public float getTmassHIvar() {
        return this.tmassHIvar;
    }

    public void setTmassHIvar(float tmassHIvar) {
        this.tmassHIvar = tmassHIvar;
    }

    public float getTmassK() {
        return this.tmassK;
    }

    public void setTmassK(float tmassK) {
        this.tmassK = tmassK;
    }

    public float getTmassKIvar() {
        return this.tmassKIvar;
    }

    public void setTmassKIvar(float tmassKIvar) {
        this.tmassKIvar = tmassKIvar;
    }

    public String getTmassPhQual() {
        return this.tmassPhQual;
    }

    public void setTmassPhQual(String tmassPhQual) {
        this.tmassPhQual = tmassPhQual;
    }

    public short getTmassRdFlg() {
        return this.tmassRdFlg;
    }

    public void setTmassRdFlg(short tmassRdFlg) {
        this.tmassRdFlg = tmassRdFlg;
    }

    public short getTmassBlFlg() {
        return this.tmassBlFlg;
    }

    public void setTmassBlFlg(short tmassBlFlg) {
        this.tmassBlFlg = tmassBlFlg;
    }

    public String getTmassCcFlg() {
        return this.tmassCcFlg;
    }

    public void setTmassCcFlg(String tmassCcFlg) {
        this.tmassCcFlg = tmassCcFlg;
    }

    public int getTmassGalContam() {
        return this.tmassGalContam;
    }

    public void setTmassGalContam(int tmassGalContam) {
        this.tmassGalContam = tmassGalContam;
    }

    public int getTmassMpFlg() {
        return this.tmassMpFlg;
    }

    public void setTmassMpFlg(int tmassMpFlg) {
        this.tmassMpFlg = tmassMpFlg;
    }

    public Character getTmassHemis() {
        return this.tmassHemis;
    }

    public void setTmassHemis(Character tmassHemis) {
        this.tmassHemis = tmassHemis;
    }

    public double getTmassJdate() {
        return this.tmassJdate;
    }

    public void setTmassJdate(double tmassJdate) {
        this.tmassJdate = tmassJdate;
    }

    public float[] getAperflux6() {
        return this.aperflux6;
    }

    public void setAperflux6(float[] aperflux6) {
        this.aperflux6 = aperflux6;
    }

    public short getZhedflag() {
        return this.zhedflag;
    }

    public void setZhedflag(short zhedflag) {
        this.zhedflag = zhedflag;
    }

    public float[] getCmodelfluxClean() {
        return this.cmodelfluxClean;
    }

    public void setCmodelfluxClean(float[] cmodelfluxClean) {
        this.cmodelfluxClean = cmodelfluxClean;
    }

    public float[] getCmodelfluxCleanIvar() {
        return this.cmodelfluxCleanIvar;
    }

    public void setCmodelfluxCleanIvar(float[] cmodelfluxCleanIvar) {
        this.cmodelfluxCleanIvar = cmodelfluxCleanIvar;
    }

    public float[] getCmodelfluxCleanVar() {
        return this.cmodelfluxCleanVar;
    }

    public void setCmodelfluxCleanVar(float[] cmodelfluxCleanVar) {
        this.cmodelfluxCleanVar = cmodelfluxCleanVar;
    }

    public float[] getCmodelfluxCleanChi2() {
        return this.cmodelfluxCleanChi2;
    }

    public void setCmodelfluxCleanChi2(float[] cmodelfluxCleanChi2) {
        this.cmodelfluxCleanChi2 = cmodelfluxCleanChi2;
    }

    public short[] getCmodelCleanNuse() {
        return this.cmodelCleanNuse;
    }

    public void setCmodelCleanNuse(short[] cmodelCleanNuse) {
        this.cmodelCleanNuse = cmodelCleanNuse;
    }

    public int[] getCmodelCleanMjdMaxdiff() {
        return this.cmodelCleanMjdMaxdiff;
    }

    public void setCmodelCleanMjdMaxdiff(int[] cmodelCleanMjdMaxdiff) {
        this.cmodelCleanMjdMaxdiff = cmodelCleanMjdMaxdiff;
    }

    public float[] getCmodelCleanMjdVar() {
        return this.cmodelCleanMjdVar;
    }

    public void setCmodelCleanMjdVar(float[] cmodelCleanMjdVar) {
        this.cmodelCleanMjdVar = cmodelCleanMjdVar;
    }

    public float[] getModelfluxClean() {
        return this.modelfluxClean;
    }

    public void setModelfluxClean(float[] modelfluxClean) {
        this.modelfluxClean = modelfluxClean;
    }

    public float[] getModelfluxCleanIvar() {
        return this.modelfluxCleanIvar;
    }

    public void setModelfluxCleanIvar(float[] modelfluxCleanIvar) {
        this.modelfluxCleanIvar = modelfluxCleanIvar;
    }

    public float[] getModelfluxCleanVar() {
        return this.modelfluxCleanVar;
    }

    public void setModelfluxCleanVar(float[] modelfluxCleanVar) {
        this.modelfluxCleanVar = modelfluxCleanVar;
    }

    public float[] getModelfluxCleanChi2() {
        return this.modelfluxCleanChi2;
    }

    public void setModelfluxCleanChi2(float[] modelfluxCleanChi2) {
        this.modelfluxCleanChi2 = modelfluxCleanChi2;
    }

    private void setRows(Object[] row) {
        FitsUtil f = new FitsUtil();
        int n = 0;
        this.run = f.toShort(row[n++]);     // RUN $1 Short I
        this.rerun = (String) row[n++];   // RERUN $2 String 3A
        this.camcol = f.uShort(row[n++]);    // CAMCOL $3 Short B true
        this.field = f.toShort(row[n++]);    // FIELD $4 Short I
        this.id = f.toShort(row[n++]);    // ID $5 Short I row index
        this.objcType = f.toInt(row[n++]);  // OBJC_TYPE $6 int J
        this.objcFlags = f.toInt(row[n++]); // OBJC_FLAGS $7 int J
        this.objcFlags2 = f.toInt(row[n++]); // OBJC_FLAGS2 $8 int J
        this.objcRowc = f.toFloat(row[n++]);
        this.rowc = f.floatArray(row[n++]);    // ROWC $9 float[] 5 5E
        this.colc = f.floatArray(row[n++]);    // COLC $10 float[] 5 5E
        this.MRrCc = f.floatArray(row[n++]);
        this.MRrCcPsf = f.floatArray(row[n++]);
        this.flags1 = f.intArray(row[n++]);  // FLAGS $18 int[] 5 5J
        this.flags2 = f.intArray(row[n++]);  // FLAGS2 $19 int[] 5 5J
        this.pspStatus = f.intArray(row[n++]);// PSP_STATUS $23 int[] 5 5J
        this.ra = f.toDouble(row[n++]);  // RA $24 double D
        this.dec = f.toDouble(row[n++]);  // DEC $25 double D
        this.psfFwhm = f.floatArray(row[n++]);  // PSF_FWHM $26 float[] 5 5E
        this.extinction = f.floatArray(row[n++]);  // EXTINCTION $27 float[] 5 5E
        this.skyflux = f.floatArray(row[n++]);
        this.psfflux = f.floatArray(row[n++]);
        this.psffluxIvar = f.floatArray(row[n++]);
        this.fiberflux = f.floatArray(row[n++]);
        this.fiberfluxIvar = f.floatArray(row[n++]);
        this.fiber2flux = f.floatArray(row[n++]);
        this.fiber2fluxIvar = f.floatArray(row[n++]);
        this.modelflux = f.floatArray(row[n++]);
        this.modelfluxIvar = f.floatArray(row[n++]);
        this.calibStatus = f.intArray(row[n++]);  // CALIB_STATUS $43 int[] 5 5J
        this.nmgypercount = f.floatArray(row[n++]);  // NMGYPERCOUNT $44 float[] 5 5E
        this.resolveStatus = f.toInt(row[n++]);  // RESOLVE_STATUS $45 int J
        this.thingId = f.toInt(row[n++]);  // THING_ID $46 int J
        this.ifield = f.toInt(row[n++]);  // IFIELD $47 int J
        this.balkanId = f.toInt(row[n++]);  // BALKAN_ID $48 int J
        this.ndetect = f.toInt(row[n++]);  // NDETECT $49 int J
        this.pmMatch = f.toInt(row[n++]);
        this.pmra = f.toFloat(row[n++]);
        this.pmdec = f.toFloat(row[n++]);
        this.pmraerr = f.toFloat(row[n++]);
        this.pmdecerr = f.toFloat(row[n++]);
        this.pmSigra = f.toFloat(row[n++]);
        this.pmSigdec = f.toFloat(row[n++]);
        this.pmNfit = f.toInt(row[n++]);
        this.pmDist22 = f.toFloat(row[n++]);
        this.tmassJ = f.toFloat(row[n++]);
        this.tmassJIvar = f.toFloat(row[n++]);
        this.tmassH = f.toFloat(row[n++]);
        this.tmassHIvar = f.toFloat(row[n++]);
        this.tmassK = f.toFloat(row[n++]);
        this.tmassKIvar = f.toFloat(row[n++]);
        this.tmassPhQual = (String) row[n++];
        this.tmassRdFlg = f.toShort(row[n++]);
        this.tmassBlFlg = f.toShort(row[n++]);
        this.tmassCcFlg = (String) row[n++];
        this.tmassGalContam = f.toInt(row[n++]);//unsighned short
        this.tmassMpFlg = f.toInt(row[n++]); //unsighned short
        this.tmassHemis = (Character) row[n++];
        this.tmassJdate = f.toDouble(row[n++]);
        this.aperflux6 = f.floatArray(row[n++]);
        this.zhedflag = f.toShort(row[n++]);
        this.cmodelfluxClean = f.floatArray(row[n++]);
        this.cmodelfluxCleanIvar = f.floatArray(row[n++]);
        this.cmodelfluxCleanVar = f.floatArray(row[n++]);
        this.cmodelfluxCleanChi2 = f.floatArray(row[n++]);
        this.cmodelCleanNuse = f.shortArray(row[n++]);
        this.cmodelCleanMjdMaxdiff = f.intArray(row[n++]);
        this.cmodelCleanMjdVar = f.floatArray(row[n++]);
        this.modelfluxClean = f.floatArray(row[n++]);
        this.modelfluxCleanIvar = f.floatArray(row[n++]);
        this.modelfluxCleanVar = f.floatArray(row[n++]);
        this.modelfluxCleanChi2 = f.floatArray(row[n++]);
    }

    @Override
    public float getSize() {
        //http://cas.sdss.org/dr3/en/proj/advanced/hr/radius1.asp
        return getPsfFwhm()[0];
    }

//    @Override
//    public Map<String, String> getBasic() {
//        Map<String, String> basic = new HashMap<>();
//        basic.put("ra", Double.toString(ra));
//        basic.put("dec", Double.toString(dec));
//        basic.put("objcType", Integer.toString(objcType));
//        basic.put("objcFlags", Integer.toString(objcFlags));
//        basic.put("objcFlags2", Integer.toString(objcFlags2));
//        basic.put("objcRowc", Float.toString(objcRowc));
//        basic.put("rowc", Arrays.toString(rowc));
//        basic.put("colc", Arrays.toString(colc));
//        basic.put("flags1", Arrays.toString(flags1));
//        basic.put("flags2", Arrays.toString(flags2));
//        basic.put("rowvdeg", Float.toString(rowvdeg));
//        basic.put("rowvdegerr", Float.toString(rowvdegerr));
//        basic.put("colvdeg", Float.toString(colvdeg));
//        basic.put("colvdegerr", Float.toString(colvdegerr));
//        basic.put("zhedflag", Short.toString(zhedflag));
//        return basic;
//    }
//
//    @Override
//    public Map<String, String> getPhotoMetric() {
//
//        Map<String, String> basic = new HashMap<>();
//        basic.put("extinction", Arrays.toString(extinction));
//        basic.put("MRrCc", Arrays.toString(MRrCc));
//        basic.put("MRrCcPsf", Arrays.toString(MRrCcPsf));
//        basic.put("skyflux", Arrays.toString(skyflux));
//        basic.put("psfflux", Arrays.toString(psfflux));
//        basic.put("psffluxIvar", Arrays.toString(psffluxIvar));
//        basic.put("fiberflux", Arrays.toString(fiberflux));
//        basic.put("fiberfluxIvar", Arrays.toString(fiberfluxIvar));
//        basic.put("fiber2flux", Arrays.toString(fiber2flux));
//        basic.put("fiber2fluxIvar", Arrays.toString(fiber2fluxIvar));
//        basic.put("modelflux", Arrays.toString(modelflux));
//        basic.put("modelfluxIvar", Arrays.toString(modelfluxIvar));
//        basic.put("aperflux6", Arrays.toString(aperflux6));
//
//
//        return basic;
//    }
//
//
//    @Override
//    public Map<String, String> getFlux() {
//        Map<String, String> basic = new HashMap<>();
//        basic.put("cmodelfluxClean", Arrays.toString(cmodelfluxClean));
//        basic.put("cmodelfluxCleanIvar", Arrays.toString(cmodelfluxCleanIvar));
//        basic.put("cmodelfluxCleanVar", Arrays.toString(cmodelfluxCleanVar));
//        basic.put("cmodelfluxCleanChi2", Arrays.toString(cmodelfluxCleanChi2));
//
//        basic.put("cmodelCleanNuse", Arrays.toString(cmodelCleanNuse));
//        basic.put("cmodelCleanMjdMaxdiff", Arrays.toString(cmodelCleanMjdMaxdiff));
//        basic.put("cmodelCleanMjdVar", Arrays.toString(cmodelCleanMjdVar));
//
//        basic.put("modelfluxClean", Arrays.toString(modelfluxClean));
//        basic.put("modelfluxCleanIvar", Arrays.toString(modelfluxCleanIvar));
//        basic.put("modelfluxCleanVar", Arrays.toString(modelfluxCleanVar));
//        basic.put("modelfluxCleanChi2", Arrays.toString(modelfluxCleanChi2));
//        return basic;
//    }
//
//    public Map<String, String> getTmass() {
//        Map<String, String> basic = new HashMap<>();
//        basic.put("tmassJ", Float.toString(tmassJ));
//        basic.put("tmassJIvar", Float.toString(tmassJIvar));
//        basic.put("tmassH", Float.toString(tmassH));
//        basic.put("tmassHIvar", Float.toString(tmassHIvar));
//        basic.put("tmassK", Float.toString(tmassK));
//        basic.put("tmassKIvar", Float.toString(tmassKIvar));
//        basic.put("tmassPhQual", tmassPhQual);
//        basic.put("tmassRdFlg", Short.toString(tmassRdFlg));
//        basic.put("tmassBlFlg", Short.toString(tmassBlFlg));
//        basic.put("tmassCcFlg", tmassCcFlg);
//        basic.put("tmassGalContam", Integer.toString(tmassGalContam));
//        basic.put("tmassMpFlg", Integer.toString(tmassMpFlg));
//        basic.put("tmassHemis", Character.toString(tmassHemis));
//        basic.put("tmassJdate", Double.toString(tmassJdate));
//        return basic;
//    }
//
//    public Map<String, String> getPm() {
//        Map<String, String> basic = new HashMap<>();
//        basic.put("pmMatch", Integer.toString(pmMatch));
//        basic.put("pmra", Float.toString(pmra));
//        basic.put("pmdec", Float.toString(pmdec));
//        basic.put("pmraerr", Float.toString(pmraerr));
//        basic.put("pmdecerr", Float.toString(pmdecerr));
//        basic.put("pmSigra", Float.toString(pmSigra));
//        basic.put("pmSigdec", Float.toString(pmSigdec));
//        basic.put("pmNfit", Integer.toString(pmNfit));
//        basic.put("pmDist22", Float.toString(pmDist22));
//        return basic;
//    }
}
