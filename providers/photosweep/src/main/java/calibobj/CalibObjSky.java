package calibobj;
// Generated 17-Jun-2016 10:09:16 by Hibernate Tools 4.3.1.Final


import model.CosObject;
import util.FitsUtil;

/**
 * CalibObjSky generated by hbm2java
 */


public class CalibObjSky extends CalibObj implements CosObject {


    public CalibObjSky() {
        super();
    }

    public CalibObjSky(Object[] row) {
        super();
        setRows(row);
    }
    public CalibObjSky(short run, String rerun, short camcol, short field, short id, int objcType, int objcFlags, int objcFlags2, float objcRowc,
                       float[] rowc, float[] colc, int[] flags, int[] flags2, int[] pspStatus, double ra, double dec,
                       float[] psfFwhm, float[] extinction, int[] calibStatus, float[] nmgypercount, int resolveStatus,
                       int thingId, int ifield, int balkanId, int ndetect) {
        this.run = run;     // RUN $1 Short I
        this.rerun = rerun;   // RERUN $2 String 3A
        this.camcol = camcol;    // CAMCOL $3 Short B true
        this.field = field;    // FIELD $4 Short I
        this.id = id;    // ID $5 Short I row index
        this.objcType = objcType;
        this.objcFlags = objcFlags;
        this.objcFlags2 = objcFlags2;
        this.objcRowc = objcRowc;
        this.rowc = rowc;
        this.colc = colc;
        this.flags1 = flags;
        this.flags2 = flags2;
        this.pspStatus = pspStatus;
        this.ra = ra;
        this.dec = dec;
        this.psfFwhm = psfFwhm;
        this.extinction = extinction;
        this.calibStatus = calibStatus;
        this.nmgypercount = nmgypercount;
        this.resolveStatus = resolveStatus;
        this.thingId = thingId;
        this.ifield = ifield;
        this.balkanId = balkanId;
        this.ndetect = ndetect;
    }

    @Override
    public String getObjid() {
        //TODO: convert to proper format
        return "" + run + rerun + camcol + field + objcType + id;
    }

    private void setRows(Object[] row) {
        FitsUtil f = new FitsUtil();
        int n = 0;
        this.run = f.toShort(row[n++]);     // RUN $1 Short I
        this.rerun = (String) row[n++];   // RERUN $2 String 3A
        this.camcol = f.uShort(row[n++]);    // CAMCOL $3 Short B true
        this.field = f.toShort(row[n++]);    // FIELD $4 Short I
        this.id = f.toShort(row[n++]);    // ID $5 Short I row index
        this.objcType = f.toInt(row[n++]);  // OBJC_TYPE $6 int J
        this.objcFlags = f.toInt(row[n++]); // OBJC_FLAGS $7 int J
        this.objcFlags2 = f.toInt(row[n++]); // OBJC_FLAGS2 $8 int J
        this.objcRowc = f.toFloat(row[n++]);
        this.rowc = f.floatArray(row[n++]);    // ROWC $9 float[] 5 5E
        this.colc = f.floatArray(row[n++]);    // COLC $10 float[] 5 5E
        this.flags1 = f.intArray(row[n++]);  // FLAGS $18 int[] 5 5J
        this.flags2 = f.intArray(row[n++]);  // FLAGS2 $19 int[] 5 5J
        this.pspStatus = f.intArray(row[n++]);// PSP_STATUS $23 int[] 5 5J
        this.ra = f.toDouble(row[n++]);  // RA $24 double D
        this.dec = f.toDouble(row[n++]);  // DEC $25 double D
        this.psfFwhm = f.floatArray(row[n++]);  // PSF_FWHM $26 float[] 5 5E
        this.extinction = f.floatArray(row[n++]);  // EXTINCTION $27 float[] 5 5E
        this.calibStatus = f.intArray(row[n++]);  // CALIB_STATUS $43 int[] 5 5J
        this.nmgypercount = f.floatArray(row[n++]);  // NMGYPERCOUNT $44 float[] 5 5E
        this.resolveStatus = f.toInt(row[n++]);  // RESOLVE_STATUS $45 int J
        this.thingId = f.toInt(row[n++]);  // THING_ID $46 int J
        this.ifield = f.toInt(row[n++]);  // IFIELD $47 int J
        this.balkanId = f.toInt(row[n++]);  // BALKAN_ID $48 int J
        this.ndetect = f.toInt(row[n++]);  // NDETECT $49 int J
    }


    @Override
    public float getSize() {
        return 0;
    }
}
